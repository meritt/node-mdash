{"name":"mdash","tagline":"A node.js wrapper for the EMT typographer","body":"[![NPM version](https://badge.fury.io/js/mdash.png)](http://badge.fury.io/js/mdash) [![Dependency Status](https://david-dm.org/meritt/node-mdash.png)](https://david-dm.org/meritt/node-mdash) [![devDependency Status](https://david-dm.org/meritt/node-mdash/dev-status.png)](https://david-dm.org/meritt/node-mdash#info=devDependencies)\r\n\r\nA node.js wrapper for the [EMT typographer](http://mdash.ru), written by Evgeny Muravjev.\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install mdash\r\n```\r\n\r\n## Examples\r\n\r\n```js\r\nvar mdash = require('mdash');\r\n\r\nvar text = '\"May the force be with you.\"\\n\"The force\" is a magical power that gives people strength. This phrase is kind of a way of saying \"good luck\".';\r\n\r\nmdash.apply(text, function(error, result) {\r\n  if (error) {\r\n    throw new Error(error);\r\n  }\r\n\r\n  console.log(result);\r\n});\r\n```\r\n\r\n```coffeescript\r\nmdash = require 'mdash'\r\n\r\ntext = '\"May the force be with you.\"\\n\"The force\" is a magical power that gives people strength. This phrase is kind of a way of saying \"good luck\".'\r\n\r\nmdash.apply text, (error, result) ->\r\n  throw new Error error if error\r\n\r\n  console.log result\r\n```\r\n\r\n## API\r\n\r\n* endpoint=\r\n* apply (text[, options], callback)\r\n\r\nBy default `endpoint` set to official API ([http://mdash.ru/api.v1.php](http://mdash.ru)), but it does not support typographer options. You can change `endpoint` to yours. For example, you can run [mdash-service](https://github.com/meritt/mdash-service) and send all request to it.\r\n\r\n#### [EMT](http://mdash.ru/rules.html) options list:\r\n\r\n```\r\nQuote.quotes\r\nQuote.quotation\r\nDash.to_libo_nibud\r\nDash.iz_za_pod\r\nDash.ka_de_kas\r\nNobr.super_nbsp\r\nNobr.nbsp_in_the_end\r\nNobr.phone_builder\r\nNobr.ip_address\r\nNobr.spaces_nobr_in_surname_abbr\r\nNobr.nbsp_celcius\r\nNobr.hyphen_nowrap_in_small_words\r\nNobr.hyphen_nowrap\r\nNobr.nowrap\r\nSymbol.tm_replace\r\nSymbol.r_sign_replace\r\nSymbol.copy_replace\r\nSymbol.apostrophe\r\nSymbol.degree_f\r\nSymbol.arrows_symbols\r\nSymbol.no_inches\r\nPunctmark.auto_comma\r\nPunctmark.hellip\r\nPunctmark.fix_pmarks\r\nPunctmark.fix_excl_quest_marks\r\nPunctmark.dot_on_end\r\nNumber.minus_between_nums\r\nNumber.minus_in_numbers_range\r\nNumber.auto_times_x\r\nNumber.simple_fraction\r\nNumber.math_chars\r\nNumber.thinsp_between_number_triads\r\nNumber.thinsp_between_no_and_number\r\nNumber.thinsp_between_sect_and_number\r\nDate.years\r\nDate.mdash_month_interval\r\nDate.nbsp_and_dash_month_interval\r\nDate.nobr_year_in_date\r\nSpace.many_spaces_to_one\r\nSpace.clear_percent\r\nSpace.clear_before_after_punct\r\nSpace.autospace_after\r\nSpace.bracket_fix\r\nAbbr.nbsp_money_abbr\r\nAbbr.nobr_vtch_itd_itp\r\nAbbr.nobr_sm_im\r\nAbbr.nobr_acronym\r\nAbbr.nobr_locations\r\nAbbr.nobr_abbreviation\r\nAbbr.ps_pps\r\nAbbr.nbsp_org_abbr\r\nAbbr.nobr_gost\r\nAbbr.nobr_before_unit_volt\r\nAbbr.nbsp_before_unit\r\nOptAlign.all\r\nOptAlign.oa_oquote\r\nOptAlign.oa_obracket_coma\r\nOptAlign.layout\r\nText.paragraphs\r\nText.auto_links\r\nText.email\r\nText.breakline\r\nText.no_repeat_words\r\nEtc.unicode_convert\r\n```\r\n\r\nYou can enable or disable option like this:\r\n\r\n```js\r\nvar options = {\r\n  'Text.paragraphs': 'off',\r\n  'Text.breakline': 'off',\r\n  'Etc.unicode_convert': 'on'\r\n};\r\n\r\nmdash.apply(text, options, function(error, result) {\r\n  if (error) {\r\n    throw new Error(error);\r\n  }\r\n\r\n  console.log(result);\r\n});\r\n```\r\n\r\n## Author\r\n\r\n* [Alexey Simonenko](mailto:alexey@simonenko.su), [simonenko.su](http://simonenko.su)\r\n\r\n## License\r\n\r\nThe MIT License, see the included `license.md` file.\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/meritt/node-mdash/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")","google":"UA-37507032-10","note":"Don't delete this file! It's used internally to help with page regeneration."}